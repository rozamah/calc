<project default="compile">

<property name="src.java.dir" location="./src/calc"/>

<property name="result.dir" location="./target"/>

<property name="result.javaclasses.dir" location="${result.dir}/classes"/>
  
  
  <property name="sonar.jdbc.username" value="sonar" />
 <property name="sonar.jdbc.password" value="sonar" />
  <property name="sonar.host.url" value="http://localhost:9000" />
	
	<property name="sonar.projectKey" value="org.sonarqube:sonarqube-scanner-ant" />
	<property name="sonar.projectName" value="Example of SonarQube Scanner for Ant Usage" />
	<property name="sonar.projectVersion" value="1.0" />
	<property name="sonar.language" value="java" />
	<property name="sonar.sources" value="./src/calc"/>
	<property name="sonar.binaries" value="./target" />
	  
  
  <target name="sonar" depends="compile">
		<taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
			<!-- Update the following line, or put the "sonar-ant-task-*.jar" file in your "$HOME/.ant/lib" folder -->
			<classpath path="C:/sonarqube-7.0/lib/scanner/sonar-scanner-engine-shaded-7.0.jar" />
		</taskdef>
		
		<!-- Execute SonarQube Scanner for Ant Analysis -->
		<sonar:sonar />
	</target>

	
	<target name="all" depends="compile,sonar" />


  
  

<path id="NecessaryLibraries"> 

<pathelement location="./MyLibraries/junit.jar"/>



<pathelement location="./MyLibraries/org.hamcrest.core_1.3.0.v201303031735.jar"/>

<pathelement location="./MyLibraries/selenium-server-standalone-3.9.1.jar"/>

</path>

<target name="compile">

<mkdir dir="${result.javaclasses.dir}"/>

<javac srcdir="${src.java.dir}" destdir="${result.javaclasses.dir}" debug="true"

includeantruntime="false">

<classpath>

<path refid="NecessaryLibraries"/>

<pathelement location="${result.javaclasses.dir}"/>

</classpath>

</javac>

</target>

<target name="test" depends="compile">

<!--fork : each test will run in its own JVM (to seperate test cases)-->

<junit printsummary="true" haltonfailure="true" fork="true">

<classpath>

<path refid="NecessaryLibraries"></path>

<pathelement location="${result.javaclasses.dir}"/>

</classpath>

<formatter type="brief" usefile="false"/>

<batchtest >

<fileset dir="${result.javaclasses.dir}" >

<include name="**/*calctest.class"/>

</fileset>

</batchtest>

</junit>

</target>

</project>
